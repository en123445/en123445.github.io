"use strict";(self.webpackChunkrannnyuu=self.webpackChunkrannnyuu||[]).push([[4292],{3905:(n,e,t)=>{t.d(e,{Zo:()=>o,kt:()=>T});var s=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);e&&(s=s.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,s)}return t}function E(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,s,a=function(n,e){if(null==n)return{};var t,s,a={},r=Object.keys(n);for(s=0;s<r.length;s++)t=r[s],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(s=0;s<r.length;s++)t=r[s],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var S=s.createContext({}),l=function(n){var e=s.useContext(S),t=e;return n&&(t="function"==typeof n?n(e):E(E({},e),n)),t},o=function(n){var e=l(n.components);return s.createElement(S.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return s.createElement(s.Fragment,{},e)}},c=s.forwardRef((function(n,e){var t=n.components,a=n.mdxType,r=n.originalType,S=n.parentName,o=i(n,["components","mdxType","originalType","parentName"]),c=l(t),T=a,A=c["".concat(S,".").concat(T)]||c[T]||p[T]||r;return t?s.createElement(A,E(E({ref:e},o),{},{components:t})):s.createElement(A,E({ref:e},o))}));function T(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var r=t.length,E=new Array(r);E[0]=c;var i={};for(var S in e)hasOwnProperty.call(e,S)&&(i[S]=e[S]);i.originalType=n,i.mdxType="string"==typeof n?n:a,E[1]=i;for(var l=2;l<r;l++)E[l]=t[l];return s.createElement.apply(null,E)}return s.createElement.apply(null,t)}c.displayName="MDXCreateElement"},16960:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>S,contentTitle:()=>E,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var s=t(87462),a=(t(67294),t(3905));const r={},E=void 0,i={unversionedId:"SQL Memo2",id:"SQL Memo2",title:"SQL Memo2",description:"\u77e5\u8bc6\u70b9",source:"@site/docs/tech/SQL Memo2.md",sourceDirName:".",slug:"/SQL Memo2",permalink:"/tech/SQL Memo2",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SQL Memo",permalink:"/tech/SQL Memo"},next:{title:"SQL \u7ec3\u4e60",permalink:"/tech/SQL \u7ec3\u4e60"}},S={},l=[{value:"\u77e5\u8bc6\u70b9",id:"\u77e5\u8bc6\u70b9",level:2},{value:"\u4f8b\u5b50\u4e0e\u7ec3\u4e60",id:"\u4f8b\u5b50\u4e0e\u7ec3\u4e60",level:2}],o={toc:l};function p(n){let{components:e,...t}=n;return(0,a.kt)("wrapper",(0,s.Z)({},o,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u77e5\u8bc6\u70b9"},"\u77e5\u8bc6\u70b9"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u8868\u4e0d\u662f\u6587\u4ef6\uff0c\u8bb0\u5f55\u4e5f\u6ca1\u6709\u987a\u5e8f\uff0c\u6240\u4ee5 SQL \u4e0d\u8fdb\u884c\u6392\u5e8f\u3002"),(0,a.kt)("li",{parentName:"ol"},"SQL \u4e0d\u662f\u9762\u5411\u8fc7\u7a0b\u8bed\u8a00\uff0c\u6ca1\u6709\u5faa\u73af\u3001\u6761\u4ef6\u5206\u652f\u3001\u8d4b\u503c\u64cd\u4f5c\u3002"),(0,a.kt)("li",{parentName:"ol"},"SQL \u901a\u8fc7\u4e0d\u65ad\u751f\u6210\u5b50\u96c6\u6765\u6c42\u5f97\u76ee\u6807\u96c6\u5408\u3002SQL \u4e0d\u50cf\u9762\u5411\u8fc7\u7a0b\u8bed\u8a00\u90a3\u6837\u901a\u8fc7\u753b\u6d41\u7a0b\u56fe\u6765\u601d\u8003\u95ee\u9898\uff0c\u800c\u662f\u901a\u8fc7\u753b\u96c6\u5408\u7684\u5173\u7cfb\u56fe\u6765\u601d\u8003\u3002"),(0,a.kt)("li",{parentName:"ol"},"GROUP BY \u5b50\u53e5\u53ef\u4ee5\u7528\u6765\u751f\u6210\u5b50\u96c6\u3002"),(0,a.kt)("li",{parentName:"ol"},"WHERE \u5b50\u53e5\u7528\u6765\u8c03\u67e5\u96c6\u5408\u5143\u7d20\u7684\u6027\u8d28\uff0c\u800c HAVING \u5b50\u53e5\u7528\u6765\u8c03\u67e5\u96c6\u5408\u672c\u8eab\u7684\u6027\u8d28\u3002")),(0,a.kt)("h2",{id:"\u4f8b\u5b50\u4e0e\u7ec3\u4e60"},"\u4f8b\u5b50\u4e0e\u7ec3\u4e60"),(0,a.kt)("p",null,"\u300cSQL\u8fdb\u9636.pdf\u300d"),(0,a.kt)("p",null,"-- 1-1-1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE `Greatests`(\n`key1` VARCHAR(20),\n`x` int(8),\n`y` int(8),\n`z` int(8),\nPRIMARY KEY(`key1`)\n);\n\ninsert into Greatests values('A' , 1 , 2 , 3);\ninsert into Greatests values('B' , 5 , 5 , 2);\ninsert into Greatests values('C' , 4 , 7 , 1);\ninsert into Greatests values('D' , 3 , 3 , 8);\n\n-- \u4ece\u8868\u91cc\u9009\u51fa x \u548c y \u4e8c\u8005\u4e2d\u8f83\u5927\u7684\u503c\u7684\u60c5\u51b5\nSELECT \n    key1,\n    (CASE WHEN x > y\n    THEN x\n    ELSE y\n    END\n    ) AS greatest\nFROM Greatests;\n\n-- \u6c42 x \u3001y \u548c z \u4e09\u8005\u4e2d\u7684\u6700\u5927\u503c\nSELECT \n    key1,\n    (CASE \n    WHEN x >= y AND x >= z THEN x\n    WHEN y >= x AND y >= z THEN y\n    ELSE z\n    END\n    ) AS greatest\nFROM Greatests;\n")),(0,a.kt)("p",null,"-- 1-1-3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT key1\nFROM Greatests\nORDER BY \nCASE key1\nWHEN 'B' THEN 1\nWHEN 'A' THEN 2\nWHEN 'D' THEN 3\nWHEN 'C' THEN 4\nELSE NULL END;\n\nSELECT key1,\nCASE key1\nWHEN 'B' THEN 1\nWHEN 'A' THEN 2\nWHEN 'D' THEN 3\nWHEN 'C' THEN 4\nELSE NULL END AS sort_col\nFROM Greatests\nORDER BY sort_col;\n")),(0,a.kt)("p",null,"-- 1-2-1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE `PopTb2`(\n`pref_name` VARCHAR(20),\n`sex` int(1),\n`population` int(8)\n);\n\ninsert into PopTb2 values('\u5fb7\u5c9b' , 1 , 60);\ninsert into PopTb2 values('\u5fb7\u5c9b' , 2 , 40);\ninsert into PopTb2 values('\u9999\u5ddd' , 1 , 100);\ninsert into PopTb2 values('\u9999\u5ddd' , 2 , 100);\ninsert into PopTb2 values('\u7231\u5a9b' , 1 , 100);\ninsert into PopTb2 values('\u7231\u5a9b' , 2 , 50);\ninsert into PopTb2 values('\u9ad8\u77e5' , 1 , 100);\ninsert into PopTb2 values('\u9ad8\u77e5' , 2 , 100);\ninsert into PopTb2 values('\u798f\u5188' , 1 , 100);\ninsert into PopTb2 values('\u798f\u5188' , 2 , 200);\ninsert into PopTb2 values('\u4f50\u8d3a' , 1 , 20);\ninsert into PopTb2 values('\u4f50\u8d3a' , 2 , 80);\ninsert into PopTb2 values('\u957f\u5d0e' , 1 , 125);\ninsert into PopTb2 values('\u957f\u5d0e' , 2 , 125);\ninsert into PopTb2 values('\u4e1c\u4eac' , 1 , 250);\ninsert into PopTb2 values('\u4e1c\u4eac' , 2 , 150);\n\n-- \u4f8b\nSELECT CASE pref_name\nWHEN '\u5fb7\u5c9b' THEN '\u56db\u56fd'\nWHEN '\u9999\u5ddd' THEN '\u56db\u56fd'\nWHEN '\u7231\u5a9b' THEN '\u56db\u56fd'\nWHEN '\u9ad8\u77e5' THEN '\u56db\u56fd'\nWHEN '\u798f\u5188' THEN '\u4e5d\u5dde'\nWHEN '\u4f50\u8d3a' THEN '\u4e5d\u5dde'\nWHEN '\u957f\u5d0e' THEN '\u4e5d\u5dde'\nELSE '\u5176\u4ed6' END AS district,\nSUM(population)\nFROM PopTb2\nGROUP BY CASE pref_name\nWHEN '\u5fb7\u5c9b' THEN '\u56db\u56fd'\nWHEN '\u9999\u5ddd' THEN '\u56db\u56fd'\nWHEN '\u7231\u5a9b' THEN '\u56db\u56fd'\nWHEN '\u9ad8\u77e5' THEN '\u56db\u56fd'\nWHEN '\u798f\u5188' THEN '\u4e5d\u5dde'\nWHEN '\u4f50\u8d3a' THEN '\u4e5d\u5dde'\nWHEN '\u957f\u5d0e' THEN '\u4e5d\u5dde'\nELSE '\u5176\u4ed6' END;\n\n\nSELECT pref_name,\n-- \u7537\u6027\u4eba\u53e3\nSUM( CASE WHEN sex = '1' THEN population ELSE 0 END) AS cnt_m,\n-- \u5973\u6027\u4eba\u53e3\nSUM( CASE WHEN sex = '2' THEN population ELSE 0 END) AS cnt_f\nFROM PopTb2\nGROUP BY pref_name;\n\n-- \u8f6c\u6362\u884c\u5217\uff1a\u5728\u8868\u5934\u91cc\u52a0\u5165\u6c47\u603b\u548c\u518d\u63ed\nSELECT sex,\n    SUM(population) AS total,\n    SUM(CASE WHEN pref_name = '\u5fb7\u5c9b' THEN population ELSE 0 END) AS col_1,\n    SUM(CASE WHEN pref_name = '\u9999\u5ddd' THEN population ELSE 0 END) AS col_2,\n    SUM(CASE WHEN pref_name = '\u7231\u5a9b' THEN population ELSE 0 END) AS col_3,\n    SUM(CASE WHEN pref_name = '\u9ad8\u77e5' THEN population ELSE 0 END) AS col_4,\n    SUM(CASE WHEN pref_name IN ('\u5fb7\u5c9b', '\u9999\u5ddd', '\u7231\u5a9b', '\u9ad8\u77e5')\n    THEN population ELSE 0 END) AS zaijie\nFROM PopTb2\nGROUP BY sex;\n")),(0,a.kt)("p",null,"-- 1-2-2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE `DistrictProducts`(\n`district` VARCHAR(20),\n`name` VARCHAR(20),\n`price` int(8)\n);\n\ninsert into DistrictProducts values('\u4e1c\u5317' , '\u6a58\u5b50' , 100);\ninsert into DistrictProducts values('\u4e1c\u5317' , '\u82f9\u679c' , 50);\ninsert into DistrictProducts values('\u4e1c\u5317' , '\u8461\u8404' , 50);\ninsert into DistrictProducts values('\u4e1c\u5317' , '\u67e0\u6aac' , 30);\ninsert into DistrictProducts values('\u5173\u4e1c' , '\u67e0\u6aac' , 100);\ninsert into DistrictProducts values('\u5173\u4e1c' , '\u83e0\u841d' , 100);\ninsert into DistrictProducts values('\u5173\u4e1c' , '\u82f9\u679c' , 100);\ninsert into DistrictProducts values('\u5173\u4e1c' , '\u8461\u8404' , 70);\ninsert into DistrictProducts values('\u5173\u897f' , '\u67e0\u6aac' , 70);\ninsert into DistrictProducts values('\u5173\u897f' , '\u897f\u74dc' , 30);\ninsert into DistrictProducts values('\u5173\u897f' , '\u82f9\u679c' , 20);\n\nALTER TABLE DistrictProducts ADD ranking int(8);\n\n-- \u6709\u540c\u6392\u540d\uff0crank\u4f46\u4e0d\u8df3\u6392\u540d\nSELECT DP.district, DP.name, DP.price, rank\nFROM (\n    SELECT \n    tmp.*, \n    IF\n    (tmp.district = @tmid, \n        IF(tmp.price != @pmid, @rank := @rank + 1, @rank := @rank), \n    @rank := 1) AS rank, \n    @tmid := tmp.district,\n    @pmid := tmp.price\n    FROM \n        (SELECT *\n        FROM DistrictProducts\n        GROUP BY district, name, price\n        ORDER BY district ASC, price DESC) AS tmp,\n        (SELECT @rank := 0, @tmid := NULL, @pmid := 0) AS tmp1 -- @tmid\u8bb0\u5f55\u5730\u533a\u662f\u5426\u53d8\u66f4\uff0c@pmid\u8bb0\u5f55\u4ef7\u683c\u662f\u5426\u53d8\u66f4\n) AS DP;\n\n-- ranka\u6709\u540c\u6392\u540d\uff0c\u4e14\u8df3\u6392\u540d\uff1brankb\u65e0\u540c\u6392\u540d\nSELECT DP.district, DP.name, DP.price, ranka, rankb\nFROM (\n    SELECT \n    tmp.*, \n    IF\n    (tmp.district = @tmid, \n        IF(tmp.price != @pmid, @rank1 := @rank + 1, @rank1 := @rank1), \n    @rank1 := 1) AS ranka, \n    IF(tmp.district = @tmid, @rank := @rank + 1, @rank := 1) AS rankb,\n    @tmid := tmp.district,\n    @pmid := tmp.price\n    FROM \n        (SELECT *\n        FROM DistrictProducts\n        GROUP BY district, name, price\n        ORDER BY district ASC, price DESC) AS tmp,\n        (SELECT @rank := 0, @rank1 := 0, @tmid := NULL, @pmid := 0) AS tmp1 \n        -- @rank\u8bb0\u5f55\u4e2a\u6570\u6392\u5e8f\uff0c@rank1\u8bb0\u5f55\u5c55\u793a\u6392\u5e8f\uff0c@tmid\u8bb0\u5f55\u5730\u533a\u662f\u5426\u53d8\u66f4\uff0c@pmid\u8bb0\u5f55\u4ef7\u683c\u662f\u5426\u53d8\u66f4\n) AS DP;\n\n\u6216\u8005\nSELECT P1.district, \n        P1.name,P1.price,\n        (SELECT COUNT(P2.price)\n        FROM DistrictProducts P2\n        WHERE P1.district = P2.district -- \u5728\u540c\u4e00\u4e2a\u5730\u533a\u5185\u8fdb\u884c\u6bd4\u8f83\n        AND P2.price > P1.price) + 1 AS rank_1\nFROM DistrictProducts P1;\n\n\u6216\u8005\nSELECT \n    P1.district, \n    P1.name, \n    MAX(P1.price) AS price,\n    COUNT(P2.name) +1 AS rank_1\nFROM DistrictProducts P1 LEFT OUTER JOIN DistrictProducts P2\nON P1.district = P2.district\nAND P1.price < P2.price\nGROUP BY P1.district, P1.name;\n")),(0,a.kt)("p",null,"-- 1-2-3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"-- \u4e0d\u53ef\u4ee5\u66f4\u65b0select\u7684\u8868\u81ea\u8eab\u7684\u503c\uff0c\u9700\u8981\u501f\u7528\u4e00\u4e2a\u65b0\u8868\nUPDATE DistrictProducts AS DP\nSET ranking = \n(SELECT tmp.rank \nFROM\n    (SELECT P1.district AS district, P1.name AS name,\n    (SELECT COUNT(P2.price)\n    FROM DistrictProducts P2\n    WHERE P1.district = P2.district -- \u5728\u540c\u4e00\u4e2a\u5730\u533a\u5185\u8fdb\u884c\u6bd4\u8f83\n    AND P2.price > P1.price) + 1 AS rank\n    FROM DistrictProducts P1) AS tmp\nWHERE tmp.district = DP.district AND tmp.name = DP.name\n);\n\n--  HAVING \u5b50\u53e5\u8fdb\u884c\u5b50\u67e5\u8be2\uff1a\u6c42\u4f17\u6570\nCREATE TABLE `Graduates`(\n`name` VARCHAR(10),\n`income` int(8)\n);\n\ninsert into Graduates values('A' , 400000);\ninsert into Graduates values('B' , 30000);\ninsert into Graduates values('C' , 20000);\ninsert into Graduates values('C1' , 20000);\ninsert into Graduates values('C2' , 20000);\ninsert into Graduates values('D' , 15000);\ninsert into Graduates values('E' , 15000);\ninsert into Graduates values('F1' , 10000);\ninsert into Graduates values('F2' , 10000);\ninsert into Graduates values('F3' , 10000);\n\nSELECT income, COUNT(*) AS cnt\nFROM Graduates\nGROUP BY income\nHAVING COUNT(*) >= ALL (SELECT COUNT(*)\n                        FROM Graduates\n                        GROUP BY income);\n\u6216\u8005\nSELECT income, COUNT(*) AS cnt\nFROM Graduates\nGROUP BY income\nHAVING COUNT(*) >= (SELECT MAX(cnt)\n                    FROM ( SELECT COUNT(*) AS cnt\n                    FROM Graduates\n                    GROUP BY income) TMP );\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'--  HAVING \u5b50\u53e5\u8fdb\u884c\u5b50\u67e5\u8be2\uff1a\u6c42\u4e2d\u4f4d\u6570\n/*\n\u6570\u5b66\u4e2d\u53d6\u4e2d\u4f4d\u6570:\n\u628a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u6309\u5347\u5e8f\u6392\u5217\u540e,\u53d6\u4f4d\u4e8e\u4e2d\u95f4\u7684\u5143\u7d20. \u5982\u679c\u5143\u7d20\u4e2a\u6570\u4e3a\u5076\u6570,\u5219\u53d6\u4e2d\u95f4\u4e24\u4e2a\u5143\u7d20\u7684\u5e73\u5747\u503c.\nSQL\u5b9e\u73b0\u601d\u8def: \u628a\u96c6\u5408\u5143\u7d20\u6309\u5927\u5c0f\u6392\u5e8f\u540e,\u5206\u4e3a\u4e0a\u4e0b\u4e24\u90e8\u5206,\u7136\u540e\u53d6\u4e24\u90e8\u5206\u4ea4\u96c6,\u518d\u53d6\u5e73\u5747\u503c\n\n\u5b9e\u73b0\u6b65\u9aa4:\n(1) \u5047\u8bbe\u6709\u76f8\u540c\u7684\u4e24\u4e2a\u96c6\u5408T1,T2,\u53d6\u4e24\u96c6\u5408\u7684\u7b1b\u5361\u5c14\u79ef\n(2) \u5982\u679cT1\u4e2dincome \u5927\u4e8e T2\u4e2d\u7684income,\u5219flag\u8bb0\u4e3a 1,\u5c0f\u4e8e\u5219\u8bb0\u4e3a 0\n(3) \u533a\u5206\u4e0a\u4e0b\u90e8\u5206\n\u5bf9T1\u4e2d\u6bcf\u4e2aincome\u5bf9\u5e94\u7684flag\u53d6\u548csum_flag.\n\u5bf9\u4e8eT1\u4e2d\u6bcf\u4e00\u4e2aincome,\u5982\u679csum_flag \u2265 count(flag)/2,\u5219\u5224\u65ad\u6b64income\u503c\u5c5e\u4e8e\u4e0a\u534a\u90e8\u5206(\u8f83\u5927\u90e8\u5206),\u5426\u5219 \u5c5e\u4e8e\u4e0b\u534a\u90e8\u5206(\u8f83\u5c0f\u90e8\u5206)\ncount(flag)/2 \u6709\u4ec0\u4e48\u7528\ncount(flag)/2\u8868\u793aT1\u96c6\u5408\u7684\u4e2d\u95f4\u4f4d\u7f6e\n\u4e3a\u4ec0\u4e48\u662f\u2265,\u800c\u4e0d\u662f>\n\u56e0\u4e3a\u5f53\u5143\u7d20\u4e2a\u6570\u4e3a\u5947\u6570\u65f6\u4f7f\u7528">"\u6ca1\u6709\u95ee\u9898,\u4f46\u5f53\u5143\u7d20\u4e2a\u6570\u4e3a\u5076\u6570\u65f6,\u4e0a\u4e0b\u90e8\u5206\u6ca1\u6709\u4ea4\u96c6,\u6240\u4ee5\u4f7f\u7528 \u201c\u2265\u201d.\n(4) \u53d6\u4e0a\u4e0b\u90e8\u5206\u7684\u4ea4\u96c6,\u5e76\u53d6\u5e73\u5747\u503c\n(5) \u6574\u5408SQL\n*/\nSELECT AVG(DISTINCT income)\nFROM (  SELECT T1.income\n        FROM Graduates T1, Graduates T2\n        GROUP BY T1.income\n        -- \u5e8f\u5217\u4e2d\u6bd4\u8f83\u5927\u7684\u4e00\u534a\n        HAVING SUM(CASE WHEN T2.income >= T1.income THEN 1 ELSE 0 END) \n        >= COUNT(*) / 2\n        -- \u5e8f\u5217\u4e2d\u6bd4\u8f83\u5c0f\u7684\u4e00\u534a\n        AND SUM(CASE WHEN T2.income <= T1.income THEN 1 ELSE 0 END) \n        >= COUNT(*) / 2 ) TMP;\n')),(0,a.kt)("p",null,"-- 1-4-2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE `Students`(\n`student_id` VARCHAR(10),\n`dpt` VARCHAR(10),\n`sbmt_date` DATE\n);\n\ninsert into Students values('100' , '\u7406\u5b66\u9662', '2005-10-10');\ninsert into Students values('101' , '\u7406\u5b66\u9662', '2005-09-22');\ninsert into Students values('102' , '\u6587\u5b66\u9662', NULL);\ninsert into Students values('103' , '\u6587\u5b66\u9662', '2005-09-10');\ninsert into Students values('200' , '\u6587\u5b66\u9662', '2005-09-22');\ninsert into Students values('201' , '\u5de5\u5b66\u9662', NULL);\ninsert into Students values('202' , '\u7ecf\u6d4e\u5b66\u9662', '2005-09-25');\n")),(0,a.kt)("p",null,"-- 1-4-2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"-- \u67e5\u8be2 \u5168\u4f53\u5b66\u751f\u90fd\u5728 9 \u6708\u4efd\u63d0\u4ea4\u4e86\u62a5\u544a\u7684\u5b66\u9662\nSELECT s1.dpt, COUNT(s1.student_id) AS c2\n    FROM Students AS s1\n    WHERE MONTH(sbmt_date) = '09'\n    GROUP BY s1.dpt\n    HAVING c2 = (SELECT COUNT(s2.student_id)\n                    FROM Students AS s2\n                    WHERE s1.dpt = s2.dpt\n                    GROUP BY s2.dpt); \n\n\u6216\u8005\nSELECT dpt\nFROM Students\nGROUP BY dpt\nHAVING COUNT(*) = \n    SUM(CASE WHEN sbmt_date BETWEEN '2005-09-01' AND '2005-09-30' THEN 1 ELSE 0 END);\n")),(0,a.kt)("p",null,"-- 1-4-3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE `Items`(\n`item` VARCHAR(10)\n);\ninsert into Items values('\u5564\u9152');\ninsert into Items values('\u7eb8\u5c3f\u88e4');\ninsert into Items values('\u81ea\u884c\u8f66');\n\nCREATE TABLE `ShopItems`(\n`shop` VARCHAR(10),\n`item` VARCHAR(10)\n);\ninsert into ShopItems values('\u4ed9\u53f0', '\u5564\u9152');\ninsert into ShopItems values('\u4ed9\u53f0', '\u7eb8\u5c3f\u88e4');\ninsert into ShopItems values('\u4ed9\u53f0', '\u81ea\u884c\u8f66');\ninsert into ShopItems values('\u4ed9\u53f0', '\u7a97\u5e18');\ninsert into ShopItems values('\u4e1c\u4eac', '\u5564\u9152');\ninsert into ShopItems values('\u4e1c\u4eac', '\u7eb8\u5c3f\u88e4');\ninsert into ShopItems values('\u4e1c\u4eac', '\u81ea\u884c\u8f66');\ninsert into ShopItems values('\u5927\u962a', '\u7535\u89c6');\ninsert into ShopItems values('\u5927\u962a', '\u7eb8\u5c3f\u88e4');\ninsert into ShopItems values('\u5927\u962a', '\u81ea\u884c\u8f66');\n\n-- \u67e5\u8be2 \u56ca\u62ec\u4e86\u8868 Items \u4e2d\u6240\u6709\u5546\u54c1\u7684\u5e97\u94fa\uff08\u53bb\u6389 \u8d29\u5356\u4e0d\u5728Item\u8868\u4e2d\u5546\u54c1 \u7684\u5e97\u94fa\uff09\nSELECT SI.shop\nFROM ShopItems SI LEFT OUTER JOIN Items I\nON SI.item=I.item\nGROUP BY SI.shop\nHAVING COUNT(SI.item) = (SELECT COUNT(item) FROM Items) -- \u6761\u4ef61\nAND COUNT(I.item) = (SELECT COUNT(item) FROM Items); -- \u6761\u4ef62\n\n-- \u5c55\u793a\u5e97\u5934\u3001\u4ed3\u5e93\u5546\u54c1\uff0c\u4ee5\u5e97\u5934\u4e3a\u57fa\u51c6\nSELECT SI.shop, SI.item, I.item\nFROM ShopItems SI LEFT OUTER JOIN Items I\nON SI.item = I.item\nORDER BY SI.shop\n\n-- \u67e5\u8be2 shop\uff0cmy_item_cnt \uff08\u5e97\u94fa\u7684\u73b0\u6709\u5e93\u5b58\u5546\u54c1\u79cd\u7c7b\u6570\uff09\uff0cdiff_cnt \uff08\u4e0d\u8db3\u7684\u5546\u54c1\u79cd\u7c7b\u6570\uff09\n-- \u5305\u542b \u4e0d\u5728Item\u8868\u4e2d\u5546\u54c1\nSELECT t1.shop1 AS shop, t1.c1 AS my_item_cnt, t2.c2 AS diff_cnt\nFROM \n(SELECT SI1.shop AS shop1, COUNT(SI1.item) AS c1\n    FROM ShopItems SI1\n    GROUP BY SI1.shop\n) AS t1 \nJOIN \n(SELECT SI.shop AS shop2, (SELECT COUNT(item) FROM Items) - COUNT(SI.item) AS c2\n        FROM ShopItems SI INNER JOIN Items I\n        ON SI.item = I.item\n        GROUP BY SI.shop) AS t2\nON t1.shop1 = t2.shop2;\n\n-- \u4e0d\u5305\u542b \u4e0d\u5728Item\u8868\u4e2d\u5546\u54c1\nSELECT SI.shop,\nCOUNT(SI.item) AS my_item_cnt,\n(SELECT COUNT(item) FROM Items) - COUNT(SI.item) AS diff_cnt\nFROM ShopItems SI, Items I\nWHERE SI.item = I.item\nGROUP BY SI.shop;\n")),(0,a.kt)("p",null,"-- 1-5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"-- \u884c->\u5217\uff0c\u4ee5\u5e97\u540d\u4e3a\u4fa7\u8fb9\u680f\uff0c\u5c55\u793a\u8d29\u5356'\u5564\u9152'\u7684\u5e97\u94fa\uff08\u753b\u5708\uff09\nSELECT \n    S1.shop, \n    (CASE WHEN S2.shop IS NOT NULL THEN '\u25cb' ELSE NULL END) AS '\u5564\u9152'\nFROM \n    (SELECT DISTINCT shop\n    FROM ShopItems) AS S1 -- \u4fa7\u8fb9\u680f\uff1a\u6240\u6709\u5e97\u94fa\nLEFT OUTER JOIN \n    (SELECT shop\n    FROM ShopItems\n    WHERE item = '\u5564\u9152'   ) AS S2\nON S1.shop = S2.shop\n\n-- \u2193\u2193 \u6539\u8fdb\u4e3a\u6807\u91cf\u5b50\u67e5\u8be2\nSELECT \n    S1.shop, \n    (SELECT '\u25cb'\n    FROM ShopItems AS S2\n    WHERE item = '\u5564\u9152' AND S1.shop = S2.Shop\n    ) AS '\u5564\u9152'\nFROM (SELECT DISTINCT shop FROM ShopItems) AS S1 -- \u4fa7\u8fb9\u680f\uff1a\u6240\u6709\u5e97\u94fa\n\n-- \u2193\u2193 \u6539\u8fdb\u4e3aCASE\u5d4c\u5957\nSELECT shop,\n    CASE \n        WHEN SUM(CASE WHEN item = '\u5564\u9152' THEN 1 ELSE NULL END) = 1\n        THEN '\u25cb' \n        ELSE NULL \n        END AS \"\u5564\u9152\"\nFROM ShopItems\nGROUP BY shop;\n\n-- \u5728\u4ea4\u53c9\u8868\u91cc\u5236\u4f5c\u5d4c\u5957\u5f0f\u8868\u4fa7\u680f\nCREATE TABLE `TblAge`(\n`age_class` int(2),\n`age_range` VARCHAR(10)\n);\ninsert into TblAge values(1, '21\u5c81~30\u5c81');\ninsert into TblAge values(2, '31\u5c81~40\u5c81');\ninsert into TblAge values(3, '41\u5c81~50\u5c81');\n\nCREATE TABLE `TblSex`(\n`sex_cd` VARCHAR(2),\n`sex` VARCHAR(8)\n);\ninsert into TblSex values('m', '\u7537');\ninsert into TblSex values('f', '\u5973');\n\nCREATE TABLE `TblPop`(\n`pref_name` VARCHAR(10),\n`age_class` int(2),\n`sex_cd` VARCHAR(2),\n`population` int(8)\n);\ninsert into TblPop values('\u79cb\u7530', 1, 'm', 400);\ninsert into TblPop values('\u79cb\u7530', 3, 'm', 1000);\ninsert into TblPop values('\u79cb\u7530', 1, 'f', 800);\ninsert into TblPop values('\u79cb\u7530', 3, 'f', 1000);\ninsert into TblPop values('\u9752\u68ee', 1, 'm', 700);\ninsert into TblPop values('\u9752\u68ee', 1, 'f', 500);\ninsert into TblPop values('\u9752\u68ee', 3, 'f', 800);\ninsert into TblPop values('\u4e1c\u4eac', 1, 'm', 900);\ninsert into TblPop values('\u4e1c\u4eac', 1, 'f', 1500);\ninsert into TblPop values('\u4e1c\u4eac', 3, 'f', 1200);\ninsert into TblPop values('\u5343\u53f6', 1, 'm', 900);\ninsert into TblPop values('\u5343\u53f6', 1, 'f', 1000);\ninsert into TblPop values('\u5343\u53f6', 3, 'f', 900);\n\nSELECT \n    MASTER.age_class AS age_class,\n    MASTER.sex_cd AS sex_cd,\n    DATA.pop_tohoku AS pop_tohoku,\n    DATA.pop_kanto AS pop_kanto\nFROM (SELECT age_class, sex_cd\n        FROM TblAge CROSS JOIN TblSex ) MASTER -- \u4f7f\u7528\u4ea4\u53c9\u8fde\u63a5\u751f\u6210\u4e24\u5f20\u4e3b\u8868\u7684\u7b1b\u5361\u513f\u79ef\n        LEFT OUTER JOIN\n        (SELECT \n        age_class, \n        sex_cd,\n        SUM(CASE \n            WHEN pref_name IN ('\u9752\u68ee', '\u79cb\u7530')\n            THEN population \n            ELSE NULL \n            END) AS pop_tohoku,\n        SUM(CASE \n            WHEN pref_name IN ('\u4e1c\u4eac', '\u5343\u53f6')\n            THEN population ELSE NULL END) AS pop_kanto\n            FROM TblPop\n            GROUP BY age_class, sex_cd) DATA\n        ON MASTER.age_class = DATA.age_class\n        AND MASTER.sex_cd = DATA.sex_cd;\n        \n-- \u2193\u2193 \u53bb\u6389\u4e00\u4e2a\u5185\u8054\u89c6\u56fe\n-- \u8868 TblPop \u548c MASTER \u89c6\u56fe \u5b9e\u9645\u4e0a\u662f\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\u3002\u56e0\u6b64\u8868 TblPop \u548c MASTER \u89c6\u56fe\u8fde\u63a5\u4e4b\u540e\uff0c\u7ed3\u679c\u4e2d\u7684\u884c\u6570\u4e0d\u4f1a\u589e\u52a0\nSELECT \n    MASTER.age_class AS age_class,\n    MASTER.sex_cd AS sex_cd,\n    SUM(CASE \n        WHEN pref_name IN ('\u9752\u68ee', '\u79cb\u7530')\n        THEN population \n        ELSE NULL \n        END) AS pop_tohoku,\n    SUM(CASE \n        WHEN pref_name IN ('\u4e1c\u4eac', '\u5343\u53f6')\n        THEN population \n        ELSE NULL \n        END) AS pop_kanto\nFROM (SELECT age_class, sex_cd\n        FROM TblAge CROSS JOIN TblSex) MASTER\nLEFT OUTER JOIN TblPop DATA\nON MASTER.age_class = DATA.age_class\nAND MASTER.sex_cd = DATA.sex_cd\nGROUP BY MASTER.age_class, MASTER.sex_cd;\n")),(0,a.kt)("p",null,"-- 1-5-2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE `Personnel`(\n`employee` VARCHAR(8),\n`child_1` VARCHAR(8),\n`child_2` VARCHAR(8),\n`child_3` VARCHAR(8)\n);\ninsert into Personnel values('\u8d64\u4e95', '\u4e00\u90ce', '\u4e8c\u90ce','\u4e09\u90ce');\ninsert into Personnel values('\u5de5\u85e4', '\u6625\u5b50', '\u590f\u5b50', NULL);\ninsert into Personnel values('\u94c3\u6728', '\u590f\u5b50', NULL, NULL);\ninsert into Personnel values('\u5409\u7530', NULL, NULL, NULL);\n\n-- \u7528\u5916\u8fde\u63a5\u8fdb\u884c\u884c\u5217\u8f6c\u6362\nSELECT employee, child_1 AS child FROM Personnel\nUNION ALL\nSELECT employee, child_2 AS child FROM Personnel\nUNION ALL\nSELECT employee, child_3 AS child FROM Personnel;\n\n-- \u6c42\u6bcf\u4e2a\u5458\u5de5\u629a\u517b\u7684\u5b69\u5b50\u7684\u4eba\u6570\nSELECT  EC.employee, COUNT(child) AS child_cnt\nFROM (SELECT employee, child_1 AS child FROM Personnel\n    UNION ALL\n    SELECT employee, child_2 AS child FROM Personnel\n    UNION ALL\n    SELECT employee, child_3 AS child FROM Personnel) AS EC\nGROUP BY EC.employee;\n")),(0,a.kt)("p",null,"-- 1-6 \u884c\u4e0e\u884c\u7684\u6bd4\u8f83"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE `Sales`(\n`year` YEAR,\n`sale` int(4)\n);\ninsert into Sales values('1990 ', 50);\ninsert into Sales values('1991 ', 51);\ninsert into Sales values('1992 ', 52);\ninsert into Sales values('1993 ', 52);\ninsert into Sales values('1994 ', 50);\ninsert into Sales values('1995 ', 50);\ninsert into Sales values('1996 ', 49);\ninsert into Sales values('1997 ', 55);\n\n-- \u6c42\u4e0e\u4e0a\u4e00\u5e74\u8425\u4e1a\u989d\u4e00\u6837\u7684\u5e74\u4efd\nSELECT year,sale\nFROM Sales S1\nWHERE sale = (SELECT sale\n                FROM Sales S2\n                WHERE S2.year = S1.year - 1)\nORDER BY year;\n\n\u6216\u8005\nSELECT S1.year, S1.sale\nFROM Sales S1,Sales S2\nWHERE S2.sale = S1.sale\n    AND S2.year = S1.year - 1\nORDER BY year;\n\n\n-- \u6c42\u51fa\u662f\u589e\u957f\u4e86\u8fd8\u662f\u51cf\u5c11\u4e86\uff0c\u6291\u6216\u662f\u7ef4\u6301\u73b0\u72b6\nSELECT S1.year, S1.sale,\nCASE \nWHEN sale =(SELECT sale\n            FROM Sales S2\n            WHERE S2.year = S1.year - 1) \nTHEN '\u2192' -- \u6301\u5e73\nWHEN sale >(SELECT sale\n            FROM Sales S2\n            WHERE S2.year = S1.year - 1) \nTHEN '\u2191' -- \u589e\u957f\nWHEN sale <(SELECT sale\n            FROM Sales S2\n            WHERE S2.year = S1.year - 1) \nTHEN '\u2193' -- \u51cf\u5c11\nELSE '\u2014' \nEND AS var\nFROM Sales S1\nORDER BY year;\n\n\u6216\u8005\n-- SIGN \u51fd\u6570\u7684\u4f5c\u7528\u662f\u5224\u65ad\u53c2\u6570\u7684\u6b63\u8d1f\u3002\u53c2\u6570\u4e3a\u6b63\u8fd4\u56de 1 \uff0c\u4e3a\u8d1f\u8fd4\u56de -1\uff0c\u4e3a 0 \u5219\u8fd4\u56de 0 \u3002\nSELECT \nS1.year, \nS1.sale,\nCASE SIGN(sale - (SELECT sale\n            FROM Sales S2\n            WHERE S2.year = S1.year - 1))\n    WHEN 1 THEN '\u2191' -- \u589e\u957f   \n    WHEN -1 THEN '\u2193' -- \u51cf\u5c11\n    WHEN 0 THEN '\u2192' -- \u6301\u5e73\n    ELSE '\u2014' \n    END AS var\nFROM Sales S1\nORDER BY year;\n\n\u6216\u8005\nSELECT \n    S1.year, \n    S1.sale,\n    CASE \n    WHEN S1.sale = S2.sale \n    THEN '\u2192'\n    WHEN S1.sale > S2.sale \n    THEN '\u2191'\n    WHEN S1.sale < S2.sale \n    THEN '\u2193'\n    ELSE ' \u2014 ' \n    END AS var\nFROM Sales S1, Sales S2\nWHERE S2.year = S1.year - 1\nORDER BY year;\n\n-- \u6570\u636e\u6709\u95f4\u65ad\nCREATE TABLE `Sales2`(\n`year` YEAR,\n`sale` int(4)\n);\ninsert into Sales2 values('1990 ', 50);\ninsert into Sales2 values('1992 ', 50);\ninsert into Sales2 values('1993 ', 52);\ninsert into Sales2 values('1994 ', 55);\ninsert into Sales2 values('1997 ', 55);\n\n-- \u67e5\u8be2\u4e0e\u8fc7\u53bb\u6700\u4e34\u8fd1\u7684\u5e74\u4efd\u8425\u4e1a\u989d\u76f8\u540c\u7684\u5e74\u4efd\nSELECT year, sale\nFROM Sales2 S1\nWHERE sale =(SELECT sale\n            FROM Sales2 S2\n            WHERE S2.year = (SELECT MAX(year) -- \u6761\u4ef62 \uff1a\u5728\u6ee1\u8db3\u6761\u4ef61 \u7684\u5e74\u4efd\u4e2d\uff0c\u5e74\u4efd\u6700\u65e9\u7684\u4e00\u4e2a\n                            FROM Sales2 S3\n                            WHERE S1.year > S3.year)) -- \u6761\u4ef6\uff11 \uff1a\u4e0e\u8be5\u5e74\u4efd\u76f8\u6bd4\u662f\u8fc7\u53bb\u7684\u5e74\u4efd\nORDER BY year;\n\n\u6216\u8005\nSELECT S1.year AS year, S1.sale AS sale\nFROM Sales2 S1, Sales2 S2\nWHERE S1.sale = S2.sale\n    AND S2.year = (SELECT MAX(year)\n                    FROM Sales2 S3\n                    WHERE S1.year > S3.year)\nORDER BY year;\n\n-- \u6c42\u6bcf\u4e00\u5e74\u4e0e\u8fc7\u53bb\u6700\u4e34\u8fd1\u7684\u5e74\u4efd\u4e4b\u95f4\u7684\u8425\u4e1a\u989d\u4e4b\u5dee\uff08\u7ed3\u679c\u91cc\u4e0d\u5305\u542b\u6700\u65e9\u7684\u5e74\u4efd\uff09\nSELECT \n    S2.year AS pre_year,\n    S1.year AS now_year,\n    S2.sale AS pre_sale,\n    S1.sale AS now_sale,\n    S1.sale - S2.sale AS diff\nFROM Sales2 S1, Sales2 S2\nWHERE S2.year = (SELECT MAX(year)\n                FROM Sales2 S3\n                WHERE S1.year > S3.year)\nORDER BY now_year;\n\n-- \u6c42\u6bcf\u4e00\u5e74\u4e0e\u8fc7\u53bb\u6700\u4e34\u8fd1\u7684\u5e74\u4efd\u4e4b\u95f4\u7684\u8425\u4e1a\u989d\u4e4b\u5dee\uff08\u7ed3\u679c\u91cc\u5305\u542b\u6700\u65e9\u7684\u5e74\u4efd\uff09\nSELECT \n    S2.year AS pre_year, \n    S1.year AS now_year,\n    S2.sale AS pre_sale, \n    S1.sale AS now_sale,\n    S1.sale - S2.sale AS diff\nFROM Sales2 S1 LEFT OUTER JOIN Sales2 S2\nON S2.year = (SELECT MAX(year)\n                FROM Sales2 S3\n                WHERE S1.year > S3.year)\nORDER BY now_year;\n\n-- \u7d2f\u8ba1\u503c\nCREATE TABLE `Accounts`(\n`prc_date` DATE,\n`prc_amt` int(8)\n);\n\ninsert into Accounts values('2006-10-26 ', 12000);\ninsert into Accounts values('2006-10-28 ', 2500);\ninsert into Accounts values('2006-10-31 ', -15000);\ninsert into Accounts values('2006-11-03 ', 34000);\ninsert into Accounts values('2006-11-04 ', -5000);\ninsert into Accounts values('2006-11-06 ', 7200);\ninsert into Accounts values('2006-11-11 ', 11000);\n\nSELECT \n    prc_date, \n    A1.prc_amt,\n    (SELECT SUM(prc_amt)\n    FROM Accounts A2\n    WHERE A1.prc_date >= A2.prc_date ) AS onhand_amt\nFROM Accounts A1\nORDER BY prc_date;\n\n-- \u79fb\u52a8\u7d2f\u8ba1\u503c\uff0c\u7a97\u53e3\uff1a3\u884c\uff08\u4e0d\u6ee13 \u884c\u7684\u65f6\u95f4\u533a\u95f4\u4e5f\u8f93\u51fa\uff09\nSELECT \n    prc_date, \n    A1.prc_amt,\n    (SELECT SUM(prc_amt)\n            FROM Accounts A2\n            WHERE A1.prc_date >= A2.prc_date\n            AND (SELECT COUNT(*)\n                FROM Accounts A3\n                WHERE A3.prc_date BETWEEN A2.prc_date AND A1.prc_date ) <= 3 ) AS mvg_sum\nFROM Accounts A1\nORDER BY prc_date;\n\n-- \u79fb\u52a8\u7d2f\u8ba1\u503c\uff0c\u7a97\u53e3\uff1a3\u884c\uff08\u4e0d\u6ee13 \u884c\u7684\u65f6\u95f4\u533a\u95f4\u4e0d\u663e\u793a ----\x3e \u524d\u4e24\u884c\u8981\u8ba1\u7b97\uff0c\u4f46\u4e0d\u663e\u793a\uff09\nSELECT \n    prc_date, \n    A1.prc_amt,\n    (SELECT SUM(prc_amt)\n            FROM Accounts A2\n            WHERE A1.prc_date >= A2.prc_date\n            AND (SELECT COUNT(*)\n                FROM Accounts A3\n                WHERE A3.prc_date BETWEEN A2.prc_date AND A1.prc_date ) <= 3 \n                HAVING COUNT(*) =3) AS mvg_sum -- \u4e0d\u6ee13 \u884c\u6570\u636e\u7684\u4e0d\u663e\u793a\nFROM Accounts A1\nORDER BY prc_date;\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT \nFROM \nWHERE \n")))}p.isMDXComponent=!0}}]);