"use strict";(self.webpackChunkrannnyuu=self.webpackChunkrannnyuu||[]).push([[7358],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>N});var r=t(67294);function p(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function E(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function c(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?E(Object(t),!0).forEach((function(e){p(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):E(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,r,p=function(n,e){if(null==n)return{};var t,r,p={},E=Object.keys(n);for(r=0;r<E.length;r++)t=E[r],e.indexOf(t)>=0||(p[t]=n[t]);return p}(n,e);if(Object.getOwnPropertySymbols){var E=Object.getOwnPropertySymbols(n);for(r=0;r<E.length;r++)t=E[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(p[t]=n[t])}return p}var a=r.createContext({}),d=function(n){var e=r.useContext(a),t=e;return n&&(t="function"==typeof n?n(e):c(c({},e),n)),t},u=function(n){var e=d(n.components);return r.createElement(a.Provider,{value:e},n.children)},S={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},T=r.forwardRef((function(n,e){var t=n.components,p=n.mdxType,E=n.originalType,a=n.parentName,u=o(n,["components","mdxType","originalType","parentName"]),T=d(t),N=p,l=T["".concat(a,".").concat(N)]||T[N]||S[N]||E;return t?r.createElement(l,c(c({ref:e},u),{},{components:t})):r.createElement(l,c({ref:e},u))}));function N(n,e){var t=arguments,p=e&&e.mdxType;if("string"==typeof n||p){var E=t.length,c=new Array(E);c[0]=T;var o={};for(var a in e)hasOwnProperty.call(e,a)&&(o[a]=e[a]);o.originalType=n,o.mdxType="string"==typeof n?n:p,c[1]=o;for(var d=2;d<E;d++)c[d]=t[d];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}T.displayName="MDXCreateElement"},62121:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>c,default:()=>S,frontMatter:()=>E,metadata:()=>o,toc:()=>d});var r=t(87462),p=(t(67294),t(3905));const E={},c=void 0,o={unversionedId:"SQL Memo",id:"SQL Memo",title:"SQL Memo",description:"\u77e5\u8bc6\u70b9",source:"@site/docs/tech/SQL Memo.md",sourceDirName:".",slug:"/SQL Memo",permalink:"/tech/SQL Memo",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"docusaurus2 \u5feb\u901f\u5efa\u7ad9\uff08\u811a\u624b\u67b6\uff09",permalink:"/tech/docusaurus2\u5feb\u901f\u5efa\u7ad9"},next:{title:"SQL Memo2",permalink:"/tech/SQL Memo2"}},a={},d=[{value:"\u77e5\u8bc6\u70b9",id:"\u77e5\u8bc6\u70b9",level:2},{value:"\u4f8b\u5b50\u4e0e\u7ec3\u4e60",id:"\u4f8b\u5b50\u4e0e\u7ec3\u4e60",level:2},{value:"\u51c6\u5907\u6570\u636e",id:"\u51c6\u5907\u6570\u636e",level:4}],u={toc:d};function S(n){let{components:e,...t}=n;return(0,p.kt)("wrapper",(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,p.kt)("h2",{id:"\u77e5\u8bc6\u70b9"},"\u77e5\u8bc6\u70b9"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"\u805a\u5408\u51fd\u6570\u548c GROUP BY \u5b50\u53e5")),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},"\u53ea\u80fd\u5199\u5728 SELECT \u5b50\u53e5\u4e4b\u4e2d"),(0,p.kt)("li",{parentName:"ol"},"GROUP BY \u5b50\u53e5\u4e2d\u4e0d\u80fd\u4f7f\u7528 SELECT \u5b50\u53e5\u4e2d\u5217\u7684\u522b\u540d"),(0,p.kt)("li",{parentName:"ol"},"GROUP BY \u5b50\u53e5\u7684\u805a\u5408\u7ed3\u679c\u662f\u65e0\u5e8f\u7684"),(0,p.kt)("li",{parentName:"ol"},"WHERE \u5b50\u53e5\u4e2d\u4e0d\u80fd\u4f7f\u7528\u805a\u5408\u51fd\u6570")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"SELECT \u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\nFROM \u2192 WHERE \u2192 GROUP BY \u2192 HAVING \u2192 SELECT \u2192 ORDER BY \u2192 LIMIT ")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},'DISTINCT \u4e0e GROUP BY\u7684\u4f7f\u7528\u65f6\u673a\n"\u60f3\u8981\u5220\u9664\u9009\u62e9\u7ed3\u679c\u4e2d\u7684\u91cd\u590d\u8bb0\u5f55"\u65f6 \u4f7f\u7528 DISTINCT \uff0c\n"\u60f3\u8981\u8ba1\u7b97\u6c47\u603b\u7ed3\u679c"\u65f6 \u4f7f\u7528 GROUP BY')),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"WHERE \u4e0e HAVING\nWHERE \u5b50\u53e5 = \u6307\u5b9a\u884c\u6240\u5bf9\u5e94\u7684\u6761\u4ef6 \uff08\u901f\u5ea6\u5feb\uff09 //WHERE \u5b50\u53e5\u4e2d\u4e0d\u80fd\u4f7f\u7528\u805a\u5408\u51fd\u6570!!\nHAVING \u5b50\u53e5 = \u6307\u5b9a\u7ec4\u6240\u5bf9\u5e94\u7684\u6761\u4ef6\n\u2191\u2191\u2191\u2191\u2191\u2191  \u4f18\u5148\u9009WHERE\uff0c\u518d\u9009HAVING\uff08\u7528WHERE\u8fc7\u6ee4\u6389\u4e0d\u8981\u7684\u6570\u636e\uff0c\u51cf\u5c11\u6570\u636e\u91cf\uff09\u2191\u2191\u2191\u2191\u2191\u2191 "))),(0,p.kt)("p",null,"\u5b50\u53e5\u7684\u4e66\u5199\u987a\u5e8f"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"1. SELECT \u5b50\u53e5 \u2192 2. FROM \u5b50\u53e5 \u2192 3. WHERE \u5b50\u53e5 \u2192 4. GROUP BY \u5b50\u53e5 \u2192 5. HAVING \u5b50\u53e5 \u2192 6. ORDER BY \u5b50\u53e5 \u2192 7.LIMIT \n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"\u3010\u4f18\u5316\u539f\u5219\u3011\n\u5c0f\u8868\u9a71\u52a8\u5927\u8868\uff1a\u5c0f\u7684\u6570\u636e\u96c6\u9a71\u52a8\u5927\u7684\u6570\u636e\u96c6")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"SELECT * from A WHERE id in (select id from B) -- \u5f53B\u7684\u6570\u636e\u96c6\u5c0f\u4e8eA\u65f6\uff0cin\u4f18\u4e8eEXISTS\n\u7b49\u4ef7\u4e8e\uff1a\nfor SELECT id FROM B\nfor SELECT * FROM A WHERE A.id = B.id\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre"},"SELECT * from A WHERE EXISTS in (select * from B WHERE B.id = A.id)  -- \u5f53A\u7684\u6570\u636e\u96c6\u5c0f\u4e8eB\u65f6\uff0cEXISTS\u4f18\u4e8ein\n\u7b49\u4ef7\u4e8e\uff1a\nfor SELECT * FROM A\nfor SELECT * FROM B WHERE B.id = A.id\n")),(0,p.kt)("p",null,'EXISTS\u7684\u601d\u8003\u903b\u8f91\uff08\u4e60\u60ef"\u80af\u5b9a <=> \u53cc\u91cd\u5426\u5b9a"\u4e4b\u95f4\u7684\u8f6c\u6362\uff09\n\u6240\u6709\u7684 x \u90fd\u6ee1\u8db3\u6761\u4ef6 P = \u4e0d\u5b58\u5728\u4e0d\u6ee1\u8db3\u6761\u4ef6 P \u7684 x'),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"EXISTS\uff08\u5b58\u5728\uff09\n\u5148\u8fd0\u884c\u4e3b\u67e5\u8be2\u4e00\u6b21 \u518d\u53bb\u5b50\u67e5\u8be2\u91cc\u67e5\u8be2\u4e0e\u5176\u5bf9\u5e94\u7684\u7ed3\u679c \u5982\u679c\u5b58\u5728\uff0c\u8fd4\u56deture\u5219\u8f93\u51fa,\u53cd\u4e4b\u8fd4\u56defalse\u5219\u4e0d\u8f93\u51fa,\u518d\u6839\u636e\u4e3b\u67e5\u8be2\u4e2d\u7684\u6bcf\u4e00\u884c\u53bb\u5b50\u67e5\u8be2\u91cc\u53bb\u67e5\u8be2.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"\u5916\u90e8\u67e5\u8be2 \u4e0e \u5b50\u67e5\u8be2\n\u6267\u884c\u987a\u5e8f\u5982\u4e0b\uff1a"))),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},"\u9996\u5148\u6267\u884c\u4e00\u6b21\u5916\u90e8\u67e5\u8be2"),(0,p.kt)("li",{parentName:"ol"},"\u5bf9\u4e8e\u5916\u90e8\u67e5\u8be2\u4e2d\u7684\u6bcf\u4e00\u884c\u5206\u522b\u6267\u884c\u4e00\u6b21\u5b50\u67e5\u8be2\uff0c\u800c\u4e14\u6bcf\u6b21\u6267\u884c\u5b50\u67e5\u8be2\u65f6\u90fd\u4f1a\u5f15\u7528\u5916\u90e8\u67e5\u8be2\u4e2d\u5f53\u524d\u884c\u7684\u503c\u3002"),(0,p.kt)("li",{parentName:"ol"},"\u4f7f\u7528\u5b50\u67e5\u8be2\u7684\u7ed3\u679c\u6765\u786e\u5b9a\u5916\u90e8\u67e5\u8be2\u7684\u7ed3\u679c\u96c6\u3002\n\u5982\u679c\u5916\u90e8\u67e5\u8be2\u8fd4\u56de100\u884c\uff0cSQL   \u5c31\u5c06\u6267\u884c101\u6b21\u67e5\u8be2\uff0c\u4e00\u6b21\u6267\u884c\u5916\u90e8\u67e5\u8be2\uff0c\u7136\u540e\u4e3a\u5916\u90e8\u67e5\u8be2\u8fd4\u56de\u7684\u6bcf\u4e00\u884c\u6267\u884c\u4e00\u6b21\u5b50\u67e5\u8be2\u3002")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"IN\uff08\u5305\u542b\uff09\nin()\u540e\u9762\u7684\u5b50\u67e5\u8be2\u662f\u8fd4\u56de\u7ed3\u679c\u96c6\u7684,\u6362\u53e5\u8bdd\u8bf4\u6267\u884c\u6b21\u5e8f\u548cexists()\u4e0d\u4e00\u6837.\n\u5b50\u67e5\u8be2\u5148\u4ea7\u751f\u7ed3\u679c\u96c6,\u7136\u540e\u4e3b\u67e5\u8be2\u518d\u53bb\u7ed3\u679c\u96c6\u91cc\u53bb\u627e\u7b26\u5408\u8981\u6c42\u7684\u5b57\u6bb5\u5217\u8868\u53bb.\u7b26\u5408\u8981\u6c42\u7684\u8f93\u51fa,\u53cd\u4e4b\u5219\u4e0d\u8f93\u51fa.")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"\u6267\u884csql\u811a\u672c\u547d\u4ee4\nmysql> source xxx.sql (\u6587\u4ef6\u7edd\u5bf9\u8def\u5f84)"))),(0,p.kt)("h2",{id:"\u4f8b\u5b50\u4e0e\u7ec3\u4e60"},"\u4f8b\u5b50\u4e0e\u7ec3\u4e60"),(0,p.kt)("h4",{id:"\u51c6\u5907\u6570\u636e"},"\u51c6\u5907\u6570\u636e"),(0,p.kt)("p",null,"\u300cSQL\u57fa\u7840\u6559\u7a0b.pdf\u300d"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DATABASE shop;\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE Product\n(product_id CHAR(4) NOT NULL,\nproduct_name VARCHAR(100) NOT NULL,\nproduct_type VARCHAR(32) NOT NULL,\nsale_price INTEGER ,\npurchase_price INTEGER ,\nregist_date DATE ,\nPRIMARY KEY (product_id));\n\n\nCREATE TABLE ProductCopy AS SELECT ...; -- \u5c06\u67e5\u8be2\u7ed3\u679c\u63d2\u5165\u4e00\u5f20\u65b0\u8868\nINSERT INTO `Product` SELECT...; -- \u5c06\u67e5\u8be2\u7ed3\u679c\u63d2\u5165\u8868\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE Product ADD product_name_pinyin VARCHAR(100);\n\n\nALTER TABLE Product DROP COLUMN product_name_pinyin;\n\n\nDROP TABLE producttype, productins, productcopy, productmargin;\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO `Product`\n(`product_id`, `product_name`,`product_type`, `sale_price`, `purchase_price`, `regist_date`)\nVALUES('0001', 'T\u6064\u886b' , '\u8863\u670d', 1000, 500,'2009-09-20');\nINSERT INTO Product VALUES ('0002', '\u6253\u5b54\u5668', '\u529e\u516c\u7528\u54c1',500, 320, '2009-09-11');\nINSERT INTO Product VALUES ('0003', '\u8fd0\u52a8 T \u6064', '\u8863\u670d',4000, 2800, NULL);\nINSERT INTO Product VALUES ('0004', '\u83dc\u5200', '\u53a8\u623f\u7528\u5177',3000, 2800, '2009-09-20');\nINSERT INTO Product VALUES ('0005', '\u9ad8\u538b\u9505', '\u53a8\u623f\u7528\u5177',6800, 5000, '2009-01-15');\nINSERT INTO Product VALUES ('0006', '\u53c9\u5b50', '\u53a8\u623f\u7528\u5177',500, NULL, '2009-09-20');\nINSERT INTO Product VALUES ('0007', '\u64e6\u83dc\u677f', '\u53a8\u623f\u7528\u5177',880, 790, '2008-04-28');\nINSERT INTO Product VALUES ('0008', '\u5706\u73e0\u7b14', '\u529e\u516c\u7528\u54c1',100, NULL,'2009-11-11');\n\n\u6216\u8005\nINSERT INTO `Product`\n(`product_id`, `product_name`,`product_type`, `sale_price`, `purchase_price`, `regist_date`)\nVALUES\n('0001', 'T\u6064\u886b' , '\u8863\u670d', 1000, 500,'2009-09-20'),\n('0002', '\u6253\u5b54\u5668', '\u529e\u516c\u7528\u54c1',500, 320, '2009-09-11');\n")),(0,p.kt)("p",null,"\u2193\u2193 ",(0,p.kt)("strong",{parentName:"p"},"\u7b2c\u4e00\u7ae0 Test")," \u2193\u2193"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE  Addressbook\n(regist_no int(11) NOT NULL,\nname VARCHAR(128) NOT NULL,\naddress VARCHAR(256) NOT NULL,\ntel_no CHAR(10) ,\nmail_address CHAR(20));\n\nALTER TABLE Addressbook ADD postal_code CHAR(8) NOT NULL;\n\nDROP TABLE Addressbook;\n\n")),(0,p.kt)("hr",null),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT product_id, product_name, purchase_price\nFROM Product;\n\n-- \u522b\u540d\nSELECT product_id AS id,\nproduct_name AS name,\npurchase_price AS price\nFROM Product;\n\n-- \u53bb\u91cd\nSELECT DISTINCT product_type\nFROM Product;\n\n/*  \u591a\u5217\u53bb\u91cd \uff08\u591a\u4e2a\u5b57\u6bb5\u8054\u5408\u8d77\u6765\u53bb\u91cd\uff0cDISTINCT\u53ea\u80fd\u7528\u5728\u6240\u6709\u5b57\u6bb5\u7684\u6700\u524d\uff09*/\nSELECT DISTINCT product_type, regist_date\nFROM Product;\n\nSELECT product_name, product_type\nFROM Product\nWHERE product_type = '\u8863\u670d';\n\nSELECT product_name, purchase_price\nFROM Product\nWHERE purchase_price = 2800 OR purchase_price IS NULL;\n\n-- \u9650\u5236\nSELECT product_name\nFROM Product\nLIMIT 5 -- \u8fd4\u56de5\u884c\n\nSELECT product_id, product_name\nFROM Product\nLIMIT 2 OFFSET 5 -- \u7565\u8fc75\u884c\uff0c\u8fd4\u56de2\u884c \uff08\u8fd4\u56de\u4ece\u884c5\u5f00\u59cb\u76842\u884c\uff1a\u884c\u7f16\u53f70\u5f00\u59cb\uff09\n\u6216\u8005\nLIMIT 5, 2 -- 5\u4ee3\u8868\u4e0b\u6807\uff0c\u4e0b\u6807\u4ece0\u5f00\u59cb\n\n-- \u5206\u9875\n\u7b2cpageNum\u9875\uff1aLIMIT (pageNum -1) * pageSize, pageSize\n")),(0,p.kt)("p",null,"\u2193\u2193 ",(0,p.kt)("strong",{parentName:"p"},"\u7b2c\u4e8c\u7ae0 Test")," \u2193\u2193"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT product_name, regist_date\nFROM Product\nWHERE regist_date > '2009-04-28'\n\nSELECT product_name, product_type, sale_price * 0.9 - purchase_price > 100 AS profit\nFROM Product\nWHERE (sale_price * 0.9 - purchase_price > 100) AND (product_type = '\u529e\u516c\u7528\u54c1' OR product_type = '\u53a8\u623f\u7528\u5177')\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"-- \u975eNULL\u884c\u8ba1\u6570\nSELECT COUNT(purchase_price)\nFROM Product;\n\n-- \u5168\u884c\u8ba1\u6570\uff08\u542bNULL\u884c\uff09\n-- \u805a\u5408\u51fd\u6570\u9ed8\u8ba4\u5ffd\u7565 NULL\u3002\u4f46 COUNT (*)\u4f8b\u5916\uff0c\u5e76\u4e0d\u4f1a\u6392\u9664 NULL \u3002\n-- \u805a\u5408\u51fd\u6570\uff1aCOUNT,SUM,AVG,MAX,MIN\nSELECT COUNT(1), COUNT(*)\nFROM Product;\n\n-- \u53bb\u91cd\u540e\u8ba1\u7b97\u4e2a\u6570\nSELECT COUNT(DISTINCT product_type)\nFROM Product;\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT product_type, COUNT(*)\nFROM Product\nGROUP BY product_type\nHAVING COUNT(*) = 2;\n\nSELECT product_type, AVG(sale_price)\nFROM Product\nGROUP BY product_type\nHAVING AVG(sale_price) >= 2500;\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"-- \u7528\u522b\u540d\u6392\u5e8f\nSELECT product_id AS id, product_name, sale_price AS sp, purchase_price\nFROM Product\nORDER BY sp, id;\n\n-- \u805a\u5408\u51fd\u6570\u7ed3\u679c\u6392\u5e8f\nSELECT product_id AS id, product_name, sale_price AS sp, purchase_price\nFROM Product\nORDER BY sp, id;\n")),(0,p.kt)("p",null,"\u2193\u2193 ",(0,p.kt)("strong",{parentName:"p"},"\u7b2c\u4e09\u7ae0 Test")," \u2193\u2193"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT product_type, SUM(sale_price), SUM(purchase_price)\nFROM Product\nGROUP BY product_type\nHAVING SUM(sale_price) > SUM(purchase_price)*1.5\nORDER BY SUM(sale_price) DESC -- DESC \u5173\u952e\u5b57\u53ea\u5e94\u7528\u5230\u76f4\u63a5\u4f4d\u4e8e\u5176\u524d\u9762\u7684\u5217\u540d\n\u6216\u8005\nORDER BY purchase_price DESC, product_name\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO ProductType (product_type, sum_sale_price,sum_purchase_price)\nSELECT product_type, SUM(sale_price), SUM(purchase_price)\nFROM Product\nGROUP BY product_type;\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"DELETE FROM Product\nWHERE sale_price >= 4000;\n\n-- DELETE\u53ef\u4ee5\u56de\u6eda\nmysql> start transaction;\nmysql> DELETE FROM Product;\nmysql> rollback;\n\n-- TRUNCATE \u4e0d\u53ef\u56de\u6eda\uff0c\u6bd4DELETE\u6548\u7387\u9ad8\nTRUNCATE TABLE productcopy;\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"UPDATE Product\nSET sale_price = sale_price * 10\nWHERE product_type = '\u53a8\u623f\u7528\u5177';\n\nUPDATE Product\nSET sale_price = sale_price * 10,\npurchase_price = purchase_price / 2\nWHERE product_type = '\u53a8\u623f\u7528\u5177';\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"START TRANSACTION;\n-- \u5c06\u8fd0\u52a8 T \u6064\u7684\u9500\u552e\u5355\u4ef7\u964d\u4f4e 1000 \u65e5\u5143\nUPDATE Product\nSET sale_price = sale_price - 1000\nWHERE product_name = '\u8fd0\u52a8 T \u6064';\n-- \u5c06 T \u6064\u886b\u7684\u9500\u552e\u5355\u4ef7\u4e0a\u6d6e 1000 \u65e5\u5143\nUPDATE Product\nSET sale_price = sale_price + 1000\nWHERE product_name = 'T \u6064\u886b ';\nCOMMIT;\n\nSTART TRANSACTION;\n-- \u5c06\u8fd0\u52a8 T \u6064\u7684\u9500\u552e\u5355\u4ef7\u964d\u4f4e 1000 \u65e5\u5143\nUPDATE Product\nSET sale_price = sale_price - 1000\nWHERE product_name = '\u8fd0\u52a8 T \u6064';\n-- \u5c06 T \u6064\u886b\u7684\u9500\u552e\u5355\u4ef7\u4e0a\u6d6e 1000 \u65e5\u5143\nUPDATE Product\nSET sale_price = sale_price + 1000\nWHERE product_name = 'T \u6064\u886b ';\nROLLBACK;\n\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"-- ALL : \u4e0e\u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u6240\u6709\u503c\u6bd4\u8f83\u4e3atrue \u5219\u8fd4\u56detrue\nSELECT product_name, sale_price\nFROM  product\nWHERE sale_price > ALL(SELECT sale_price\n                        FROM  product2\n                        WHERE sale_price)\n                        \n-- ANY : \u4e0e\u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u4efb\u4f55\u503c\u6bd4\u8f83\u4e3atrue \u5219\u8fd4\u56detrue\nSELECT sale_price\nFROM  product\nWHERE sale_price > ANY(SELECT sale_price\n                        FROM  product2\n                        WHERE sale_price)\n")),(0,p.kt)("p",null,"\u2193\u2193 ",(0,p.kt)("strong",{parentName:"p"},"\u7b2c\u56db\u7ae0 Test")," \u2193\u2193"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO ProductMargin (product_id, product_name, sale_price, purchase_price, margin)\nSELECT product_id, product_name, sale_price, purchase_price, (sale_price - purchase_price)\nFROM Product\nWHERE sale_price - purchase_price > 0\n\nSTART TRANSACTION;\n-- \u5c06T\u6064\u7684\u9500\u552e\u5355\u4ef7\u964d\u4f4e 100 \u65e5\u5143\nUPDATE Product\nSET sale_price = sale_price - 100\nWHERE product_name = 'T\u6064\u886b';\n\n-- \u518d\u6b21\u8ba1\u7b97\u5229\u6da6\nUPDATE ProductMargin\nSET sale_price = (\n    SELECT sale_price \n    FROM Product\n    WHERE product_name = 'T\u6064\u886b')\nWHERE product_name = 'T\u6064\u886b';\n\nUPDATE ProductMargin\nSET margin = (sale_price - purchase_price)\nWHERE product_name = 'T\u6064\u886b';\nCOMMIT;\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"\n-- \u6839\u636e\u5546\u54c1\u79cd\u7c7b\u7edf\u8ba1\u5546\u54c1\u6570\u91cf\u7684\u89c6\u56fe\nCREATE VIEW ProductSum (product_type, cnt_product)\nAS\nSELECT product_type, COUNT(*)\nFROM Product\nGROUP BY product_type;\n\n-- \u786e\u8ba4\u521b\u5efa\u597d\u7684\u89c6\u56fe\nSELECT product_type, cnt_product\nFROM ProductSum;\n\nCREATE VIEW ProductSumJim (product_type, cnt_product)\nAS\nSELECT product_type, cnt_product\nFROM ProductSum\nWHERE product_type = '\u529e\u516c\u7528\u54c1';\n\nSELECT product_type, cnt_product\nFROM ProductSumJim;\n\nDROP VIEW ProductSum;\n\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"--\u5b50\u67e5\u8be2,\u5b50\u67e5\u8be2\u4f5c\u4e3a\u5185\u5c42\u67e5\u8be2\u4f1a\u9996\u5148\u6267\u884c\u3002\nSELECT product_type, cnt_product\nFROM ( \n    SELECT product_type, COUNT(*) AS cnt_product\n    FROM Product\n    GROUP BY product_type ) AS ProductSum;\n\nSELECT product_type, cnt_product\nFROM (\n    SELECT *\n    FROM (\n        SELECT product_type, COUNT(*) AS cnt_product\n        FROM Product\n        GROUP BY product_type) AS ProductSum\n    WHERE cnt_product = 4) AS ProductSum2;\n\n-- \u6807\u91cf\u5b50\u67e5\u8be2,\u5fc5\u987b\u800c\u4e14\u53ea\u80fd\u8fd4\u56de 1 \u884c 1\u5217\u7684\u7ed3\u679c,\u56e0\u6b64\u6807\u91cf\u5b50\u67e5\u8be2\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u7528\u5728 = \u6216\u8005 <> \u8fd9\u6837\u9700\u8981\u5355\u4e00\u503c\u7684\u6bd4\u8f83\u8fd0\u7b97\u7b26\u4e4b\u4e2d\nSELECT product_id, product_name, sale_price\nFROM Product\nWHERE sale_price > (\n    SELECT AVG(sale_price)\n    FROM Product);\n\nSELECT \n    product_id,\n    product_name,\n    sale_price,\n    (SELECT AVG(sale_price)\n        FROM Product) AS avg_price\nFROM Product;\n\n-- \u5173\u8054\u5b50\u67e5\u8be2\n-- \u5bf9\u4e8e\u5916\u90e8\u67e5\u8be2\u8fd4\u56de\u7684\u6bcf\u4e00\u884c\u6570\u636e\uff0c\u5185\u90e8\u67e5\u8be2\u90fd\u8981\u6267\u884c\u4e00\u6b21\u3002\n-- \u5148\u6267\u884c\u5916\u5c42\u67e5\u8be2\uff0c\u4e2d\u95f4\u7ed3\u679c\u7684\u7b2cn\u6761\u8bb0\u5f55\uff08\u7684\u5339\u914d\u6761\u4ef6\uff09\u4f20\u9012\u7ed9\u5b50\u67e5\u8be2\uff0c\u5b50\u67e5\u8be2\u7ed3\u679c\u8fd4\u7ed9\u5916\u5c42\u67e5\u8be2\u7ee7\u7eed\u505a\u6bd4\u8f83\uff0c\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\n/* \u4f8b:\nSELECT P1 \u7ed3\u679c\u7684\u7b2c\u4e00\u6761\u8bb0\u5f55\u7684 P1.product_type \u4f20\u7ed9\u5b50\u67e5\u8be2\n\u7528P1.product_type = P2.product_type\u7684\u5173\u8054\u6761\u4ef6\u5f97\u5230\u5b50\u67e5\u8be2\u7684AVG()\u7ed3\u679c\n\u5b50\u67e5\u8be2\u7ed3\u679c\u8fd4\u56de\u5916\u5c42\uff0c\u7ee7\u7eed\u505a > \u6bd4\u8f83\uff0c\u5f97\u5230P1.product_type\u6761\u4ef6\u7684\u67e5\u8be2\u7ed3\u679c\n\u5916\u5c42\u67e5\u8be2\u7684\u6bcf\u4e00\u6761\u7ed3\u679c\u5faa\u73af\u4f20\u5165\u5b50\u67e5\u8be2\uff0c\u91cd\u590d\u4e0a\u8ff0\u6bd4\u8f83\u8fc7\u7a0b\n\u203bproduct_type\u76f8\u540c\u7684\u884c\u6570\u636e\u91cd\u590d\u8ba1\u7b97\u65f6\u7531sql\u4f18\u5316\u6548\u7387\n*/\nSELECT product_type , product_name, sale_price\nFROM Product AS P1\nWHERE sale_price > (SELECT AVG(sale_price)\n    FROM Product AS P2\n    WHERE P1.product_type = P2.product_type\n    GROUP BY product_type);\n")),(0,p.kt)("p",null,"\u2193\u2193 ",(0,p.kt)("strong",{parentName:"p"},"\u7b2c\u4e94\u7ae0 Test")," \u2193\u2193"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE VIEW  ViewPractice5_1 (product_name, sale_price, regist_date)\nAS\nSELECT product_name, sale_price, regist_date\nFROM Product\nWHERE sale_price >= 1000 AND\nregist_date = '2009-09-20';\n\nSELECT \n    product_id, \n    product_name, \n    product_type, \n    sale_price, \n    (SELECT AVG(sale_price)\n    FROM Product) AS sale_price_all\nFROM Product;\n\nCREATE VIEW  AvgPriceByType (product_id, \n    product_name, \n    product_type, \n    sale_price,\n    avg_sale_price)\nAS\nSELECT \n    product_id, \n    product_name, \n    product_type, \n    sale_price, \n    (SELECT AVG(sale_price)\n    FROM Product AS P2\n    WHERE P1.product_type = P2.product_type\n    GROUP BY product_type) AS avg_sale_price -- \u8fd9\u91cc\u4e0d\u8981\u52a0\u5916\u5c42\u62ec\u53f7\nFROM Product AS P1\n\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"-- \u7b97\u672f\nCREATE TABLE SampleMath\n(m NUMERIC (10,3),\nn INTEGER,\np INTEGER);\n\nSTART TRANSACTION;\nINSERT INTO SampleMath(m, n, p) VALUES (500, 0, NULL);\nINSERT INTO SampleMath(m, n, p) VALUES (-180, 0, NULL);\nINSERT INTO SampleMath(m, n, p) VALUES (NULL, NULL, NULL);\nINSERT INTO SampleMath(m, n, p) VALUES (NULL, 7, 3);\nINSERT INTO SampleMath(m, n, p) VALUES (NULL, 5, 2);\nINSERT INTO SampleMath(m, n, p) VALUES (NULL, 4, NULL);\nINSERT INTO SampleMath(m, n, p) VALUES (8, NULL, 3);\nINSERT INTO SampleMath(m, n, p) VALUES (2.27, 1, NULL);\nINSERT INTO SampleMath(m, n, p) VALUES (5.555,2, NULL);\nINSERT INTO SampleMath(m, n, p) VALUES (NULL, 1, NULL);\nINSERT INTO SampleMath(m, n, p) VALUES (8.76, NULL, NULL);\nCOMMIT;\n\n--\u7edd\u5bf9\u503c\nSELECT m,\nABS(m) AS abs_col\nFROM SampleMath;\n\n-- \u6c42\u4f59\u6570\nSELECT n, p,\nMOD(n, p) AS mod_col\nFROM SampleMath;\n\n-- \u56db\u820d\u4e94\u5165\uff0c\u5982\u679c\u6307\u5b9a\u56db\u820d\u4e94\u5165\u7684\u4f4d\u6570\u4e3a 1 \uff0c\u90a3\u4e48\u5c31\u4f1a\u5bf9\u5c0f\u6570\u70b9\u7b2c 2 \u4f4d\u8fdb\u884c\u56db\u820d\u4e94\u5165\u5904\u7406\n-- ROUND( \u5bf9\u8c61\u6570\u503c\uff0c\u4fdd\u7559\u5c0f\u6570\u7684\u4f4d\u6570 )\nSELECT m, n,\nROUND(m, n) AS round_col\nFROM SampleMath;\n\n\n-- \u7a7a\u503c\u5904\u7406\u51fd\u6570 IFNULL\nSELECT m, n,\nIFNULL(p, 0) AS ifnull_p -- \u5982\u679c\u662fnull\u8f6c\u4e3a0\nFROM SampleMath\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"\n-- \u5b57\u7b26\u4e32\nCREATE TABLE SampleStr\n(str1 VARCHAR ( 40 ),\nstr2 VARCHAR ( 40 ),\nstr3 VARCHAR ( 40 ));\n\nSTART TRANSACTION;\nINSERT INTO SampleStr (str1, str2, str3) VALUES ('opx' , 'rt',NULL);\nINSERT INTO SampleStr (str1, str2, str3) VALUES ('abc' , 'def' ,NULL);\nINSERT INTO SampleStr (str1, str2, str3) VALUES ('\u5c71\u7530' , '\u592a\u90ce' ,'\u662f\u6211');\nINSERT INTO SampleStr (str1, str2, str3) VALUES ('aaa' , NULL ,NULL);\nINSERT INTO SampleStr (str1, str2, str3) VALUES (NULL , 'xyz',NULL);\nINSERT INTO SampleStr (str1, str2, str3) VALUES ('@!#$%' , NULL ,NULL);\nINSERT INTO SampleStr (str1, str2, str3) VALUES ('ABC' , NULL ,NULL);\nINSERT INTO SampleStr (str1, str2, str3) VALUES ('aBC' , NULL ,NULL);\nINSERT INTO SampleStr (str1, str2, str3) VALUES ('abc\u592a\u90ce' , 'abc' ,'ABC');\nINSERT INTO SampleStr (str1, str2, str3) VALUES ('abcdefabc' , 'abc' ,'ABC');\nINSERT INTO SampleStr (str1, str2, str3) VALUES ('micmic' , 'i' ,'I');\nCOMMIT;\n\n-- \u62fc\u63a5CONCAT()\uff0c\u53bb\u6389\u53f3\u8fb9\u7a7a\u683cRTrim()\uff0c\u53bb\u6389\u5de6\u8fb9\u7a7a\u683cLTrim() \nSELECT str1, str2, str3,\nCONCAT(str1, RTrim(str2), LTrim(str3)) AS str_concat\nFROM SampleStr;\n\n-- \u957f\u5ea6\nSELECT str1,\nLENGTH(str1) AS len_str\nFROM SampleStr;\n\n-- \u5c0f\u5199\u8f6c\u6362LOWER()\uff0c\u5927\u5199\u8f6c\u6362UPPER()\nSELECT str1,\nLOWER(str1) AS low_str\nFROM SampleStr\nWHERE str1 IN ('ABC', 'aBC', 'abc', '\u5c71\u7530');\n\n-- \u5b57\u7b26\u4e32\u7684\u66ff\u6362\n-- REPLACE( \u5bf9\u8c61\u5b57\u7b26\u4e32\uff0c\u66ff\u6362\u524d\u7684\u5b57\u7b26\u4e32\uff0c\u66ff\u6362\u540e\u7684\u5b57\u7b26\u4e32 )\nSELECT str1, str2, str3,\nREPLACE(str1, str2, str3) AS rep_str\nFROM SampleStr;\n\n-- \u5b57\u7b26\u4e32\u7684\u622a\u53d6\n-- SUBSTRING \uff08\u5bf9\u8c61\u5b57\u7b26\u4e32 FROM \u622a\u53d6\u7684\u8d77\u59cb\u4f4d\u7f6e FOR \u622a\u53d6\u7684\u5b57\u7b26\u6570\uff09\nSELECT str1,\nSUBSTRING(str1 FROM 3 FOR 2) AS sub_str\nFROM SampleStr;\n\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"\n-- \u65e5\u671f\n-- \u5f53\u524d\nSELECT CURRENT_DATE, CURRENT_TIME, CURRENT_TIMESTAMP;\n\n-- \u622a\u53d6\u65e5\u671f\u5143\u7d20\n-- EXTRACT( \u65e5\u671f\u5143\u7d20 FROM \u65e5\u671f )\nSELECT CURRENT_TIMESTAMP,\nEXTRACT(YEAR FROM CURRENT_TIMESTAMP) AS year,\nEXTRACT(MONTH FROM CURRENT_TIMESTAMP) AS month,\nEXTRACT(DAY FROM CURRENT_TIMESTAMP) AS day,\nEXTRACT(HOUR FROM CURRENT_TIMESTAMP) AS hour,\nEXTRACT(MINUTE FROM CURRENT_TIMESTAMP) AS minute,\nEXTRACT(SECOND FROM CURRENT_TIMESTAMP) AS second;\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"\n-- \u6570\u636e\u7c7b\u578b\u8f6c\u6362\u51fd\u6570\n-- CAST \uff08\u8f6c\u6362\u524d\u7684\u503c AS \u60f3\u8981\u8f6c\u6362\u7684\u6570\u636e\u7c7b\u578b\uff09\n-- \u5b57\u7b26\u4e32 -> \u6570\u503c\nSELECT CAST('0001' AS SIGNED INTEGER) AS int_col;\n-- \u5b57\u7b26\u4e32 -> \u65e5\u671f\nSELECT CAST('2009-12-14' AS DATE) AS date_col;\n\n-- \u5c06 NULL \u8f6c\u6362\u4e3a\u5176\u4ed6\u503c\n-- COALESCE( \u6570\u636e 1 \uff0c\u6570\u636e 2 \uff0c\u6570\u636e 3 \u2026\u2026 )\uff0c\u8fd4\u56de\u53ef\u53d8\u53c2\u6570\u4e2d\u5de6\u4fa7\u5f00\u59cb\u7b2c1\u4e2a\u4e0d\u662f NULL \u7684\u503c\nSELECT \nCOALESCE(NULL, 1) AS col_1,\nCOALESCE(NULL, 'test', NULL) AS col_2,\nCOALESCE(NULL, NULL, '2009-11-01') AS col_3;\n\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"\n-- \u8c13\u8bcd\n-- \u90e8\u5206\u4e00\u81f4\u67e5\u8be2\nCREATE TABLE SampleLike\n( strcol VARCHAR(6) NOT NULL,\nPRIMARY KEY (strcol));\n\nSTART TRANSACTION;\nINSERT INTO SampleLike (strcol) VALUES ('abcddd');\nINSERT INTO SampleLike (strcol) VALUES ('dddabc');\nINSERT INTO SampleLike (strcol) VALUES ('abdddc');\nINSERT INTO SampleLike (strcol) VALUES ('abcdd');\nINSERT INTO SampleLike (strcol) VALUES ('ddabc');\nINSERT INTO SampleLike (strcol) VALUES ('abddc');\nCOMMIT;\n\n--  % \u4ee3\u8868 \"0 \u5b57\u7b26\u4ee5\u4e0a\u7684\u4efb\u610f\u5b57\u7b26\u4e32\"\n--  _ \u4ee3\u8868 \"\u4efb\u610f 1 \u4e2a\u5b57\u7b26\"\nSELECT *\nFROM SampleLike\nWHERE strcol LIKE 'ddd%'; -- '%ddd%' / '%ddd' / 'abc__'\n\nSELECT *\nFROM SampleLike\nWHERE strcol REGEXP 'ddd'; -- \u901a\u8fc7REGEXP\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\n\n-- \u8303\u56f4\u67e5\u8be2 \uff08\u542b\u4e34\u754c\u503c >= ; <=\uff09\nSELECT product_name, sale_price\nFROM Product\nWHERE sale_price BETWEEN 100 AND 1000; \n\n-- \u5224\u65ad\u662f\u5426\u4e3a NULL\nSELECT product_name, purchase_price\nFROM Product\nWHERE purchase_price IS NULL; -- IS NOT NULL\n\n-- IN / NOT IN \u2014\u2014 OR \u7684\u7b80\u4fbf\u7528\u6cd5 (\u4e0d\u80fd\u53d6 NULL)\nSELECT product_name, purchase_price\nFROM Product\nWHERE purchase_price IN (320, 500, 5000);\n \nCREATE TABLE ShopProduct\n(shop_id CHAR(4) NOT NULL,\nshop_name VARCHAR(200) NOT NULL,\nproduct_id CHAR(4) NOT NULL,\nquantity INTEGER NOT NULL,\nPRIMARY KEY (shop_id, product_id));\n\nSTART TRANSACTION;\nINSERT INTO ShopProduct (shop_id, shop_name, product_id, quantity) VALUES ('000A', '\u4e1c\u4eac', '0001', 30);\nINSERT INTO ShopProduct (shop_id, shop_name, product_id, quantity) VALUES ('000A', '\u4e1c\u4eac', '0002', 50);\nINSERT INTO ShopProduct (shop_id, shop_name, product_id, quantity) VALUES ('000A', '\u4e1c\u4eac', '0003', 15);\nINSERT INTO ShopProduct (shop_id, shop_name, product_id, quantity) VALUES ('000B', '\u540d\u53e4\u5c4b', '0002', 30);\nINSERT INTO ShopProduct (shop_id, shop_name, product_id, quantity) VALUES ('000B', '\u540d\u53e4\u5c4b', '0003', 120);\nINSERT INTO ShopProduct (shop_id, shop_name, product_id, quantity) VALUES ('000B', '\u540d\u53e4\u5c4b', '0004', 20);\nINSERT INTO ShopProduct (shop_id, shop_name, product_id, quantity) VALUES ('000B', '\u540d\u53e4\u5c4b', '0006', 10);\nINSERT INTO ShopProduct (shop_id, shop_name, product_id, quantity) VALUES ('000B', '\u540d\u53e4\u5c4b', '0007', 40);\nINSERT INTO ShopProduct (shop_id, shop_name, product_id, quantity) VALUES ('000C', '\u5927\u962a', '0003', 20);\nINSERT INTO ShopProduct (shop_id, shop_name, product_id, quantity) VALUES ('000C', '\u5927\u962a', '0004', 50);\nINSERT INTO ShopProduct (shop_id, shop_name, product_id, quantity) VALUES ('000C', '\u5927\u962a', '0006', 90);\nINSERT INTO ShopProduct (shop_id, shop_name, product_id, quantity) VALUES ('000C', '\u5927\u962a', '0007', 70);\nINSERT INTO ShopProduct (shop_id, shop_name, product_id, quantity) VALUES ('000D', '\u798f\u5188', '0001', 100);\nCOMMIT;\n\nSELECT product_name, sale_price\nFROM Product\nWHERE product_id IN (SELECT product_id\nFROM ShopProduct\nWHERE shop_id = '000C');\n\n--  EXIST / NOT EXIST \uff08\u5224\u65ad\u662f\u5426\u5b58\u5728\u6ee1\u8db3\u67d0\u79cd\u6761\u4ef6\u7684\u8bb0\u5f55\uff09\uff08\u901a\u5e38\u6307\u5b9a\u5173\u8054\u5b50\u67e5\u8be2\u4f5c\u4e3a EXIST \u7684\u53c2\u6570\uff09\nSELECT product_name, sale_price\nFROM Product AS P \nWHERE EXISTS (SELECT * -- \u5728 EXIST \u7684\u5b50\u67e5\u8be2\u4e2d\u4e66\u5199 SELECT * \u662f SQL \u7684\u4e00\u79cd\u4e60\u60ef\nFROM ShopProduct AS SP \nWHERE SP.shop_id = '000C'\nAND SP.product_id = P.product_id);\n\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"\n-- CASE \u8868\u8fbe\u5f0f\n-- \u884c\u6570\u636e\u8f6c\u6362\u4e3a\u5217\u6570\u636e\uff0c\u4e0e SUM \u3001COUNT \u3001AVG\u642d\u914d\uff0c\u505a\u7edf\u8ba1\n\nSELECT \n    product_name,\n    CASE \n    WHEN product_type = '\u8863\u670d'\n    THEN CONCAT('A \uff1a ', product_type)\n    WHEN product_type = '\u529e\u516c\u7528\u54c1'\n    THEN CONCAT('B \uff1a ', product_type)\n    WHEN product_type = '\u53a8\u623f\u7528\u5177'\n    THEN CONCAT('C \uff1a ', product_type)\n    ELSE NULL -- \u4e0d\u5199ELSE\u4f1a\u9ed8\u8ba4\u8bbe\u7f6e\u4e3aNULL\n    END AS abc_product_type\nFROM Product;\n\nSELECT \n    SUM(CASE WHEN product_type = '\u8863\u670d'\n    THEN sale_price ELSE 0 END) AS sum_price_clothes,\n    SUM(CASE WHEN product_type = '\u53a8\u623f\u7528\u5177'\n    THEN sale_price ELSE 0 END) AS sum_price_kitchen,\n    SUM(CASE WHEN product_type = '\u529e\u516c\u7528\u54c1'\n    THEN sale_price ELSE 0 END) AS sum_price_office\nFROM Product;\n")),(0,p.kt)("p",null,"\u2193\u2193 ",(0,p.kt)("strong",{parentName:"p"},"\u7b2c\u516d\u7ae0 Test")," \u2193\u2193"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT \n    COUNT(CASE WHEN sale_price <= 1000 THEN sale_price ELSE NULL END) AS low_price,\n    COUNT(CASE WHEN (sale_price BETWEEN 1001 AND 3000) THEN sale_price ELSE NULL END) AS mid_price,\n    COUNT(CASE WHEN sale_price >= 3001 THEN sale_price ELSE NULL END) AS high_price\nFROM Product;\n\n\u6216\u8005 \n\nSELECT SUM(CASE WHEN sale_price <= 1000\nTHEN 1 ELSE 0 END) AS low_price, -- \u8fd9\u91cc\u8981\u6362\u884c\uff0c\u5426\u5219\u8fd0\u884c\u6709\u95ee\u9898\nSUM(CASE WHEN sale_price BETWEEN 1001 AND 3000\nTHEN 1 ELSE 0 END) AS mid_price,\nSUM(CASE WHEN sale_price >= 3001\nTHEN 1 ELSE 0 END) AS high_price\nFROM Product;\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"\n-- \u96c6\u5408\u8fd0\u7b97\n-- UNION \uff08\u5e76\u96c6\uff09\uff08\u53bb\u91cd\uff09/ UNION ALL \uff08\u4e0d\u53bb\u91cd\uff09\n-- UNION\u6bd4JOIN\u6548\u7387\u9ad8\uff08\u51cf\u5c11\u4e24\u8868\u7684\u5339\u914d\u6b21\u6570\uff09\nCREATE TABLE Product2\n(product_id CHAR(4) NOT NULL,\nproduct_name VARCHAR(100) NOT NULL,\nproduct_type VARCHAR(32) NOT NULL,\nsale_price INTEGER ,\npurchase_price INTEGER ,\nregist_date DATE ,\nPRIMARY KEY (product_id));\n\nSTART TRANSACTION;\nINSERT INTO Product2 VALUES ('0001', 'T\u6064\u886b' ,'\u8863\u670d', 1000, 500, '2008-09-20');\nINSERT INTO Product2 VALUES ('0002', '\u6253\u5b54\u5668', '\u529e\u516c\u7528\u54c1', 500, 320, '2009-09-11');\nINSERT INTO Product2 VALUES ('0003', '\u8fd0\u52a8 T \u6064', '\u8863\u670d', 4000, 2800, NULL);\nINSERT INTO Product2 VALUES ('0009', '\u624b\u5957', '\u8863\u670d', 800, 500, NULL);\nINSERT INTO Product2 VALUES ('0010', '\u6c34\u58f6', '\u53a8\u623f\u7528\u5177', 2000, 1700, '2009-09-20');\nCOMMIT;\n\nSELECT product_id, product_name\nFROM Product\nWHERE product_type = '\u53a8\u623f\u7528\u5177'\nUNION\nSELECT product_id, product_name\nFROM Product2\nWHERE product_type = '\u53a8\u623f\u7528\u5177'\nORDER BY product_id;\n\n/*\n\u4e24\u4e2a\u96c6\u5408\u7684\u7ed3\u6784\u8981\u4e00\u81f4,\u5bf9\u5e94\u7684\u5b57\u6bb5\u6570,\u5b57\u6bb5\u7c7b\u578b\n\u5c06\u4e24\u4e2a\u96c6\u5408\u7528 UNION ALL \u5173\u952e\u5b57\u5408\u5e76,\u8fd9\u91cc\u7684\u7ed3\u679c\u662f\u6709\u91cd\u590d\u7684\u6240\u6709\u96c6\n\u5c06\u4e0a\u9762\u7684\u6240\u6709\u96c6 GROUP BY id\n\u6700\u540e HAVING COUNT(id)=1,\u7b49\u4e8e1\u7684\u610f\u601d\u662f\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21,\u6240\u4ee5\u8fd9\u4e2a\u662f\u5dee\u96c6,\u5982\u679c\u7b49\u4e8e2,\u90a3\u4e48\u5c31\u662f\u4ea4\u96c6\n*/\n\n-- \u4ea4\u96c6 \uff08\u65e0\u51fd\u6570\uff0c\u4ee3\u66ff INTERSECT\uff09\nSELECT P.product_id, P.product_name\nFROM (\n    SELECT product_id, product_name\n    FROM Product\n    UNION ALL\n    SELECT product_id, product_name\n    FROM Product2\n    ) AS P -- \u6d3e\u751f\u8868\u9700\u8981\u7528\u522b\u540d\u8bc6\u522b\nGROUP BY P.product_id HAVING COUNT(P.product_id) = 2; \n\n-- \u5dee\u96c6 \uff08\u65e0\u51fd\u6570\uff09\n-- \u53ea\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\u51fa\u73b0\nSELECT P.product_id, P.product_name\nFROM (\n    SELECT product_id, product_name\n    FROM Product\n    UNION ALL\n    SELECT product_id, product_name\n    FROM Product2\n    ) AS P -- \u6d3e\u751f\u8868\u9700\u8981\u7528\u522b\u540d\u8bc6\u522b\nGROUP BY P.product_id HAVING COUNT(P.product_id) = 1; \n\n-- \u8bb0\u5f55\u51cf\u6cd5 \uff08\u65e0\u51fd\u6570\uff0c\u4ee3\u66ffEXCEPT\uff09\n-- \u53ea\u5728\u5de6\u8fb9\u7684\u96c6\u5408\u51fa\u73b0\nSELECT product_id, product_name\nFROM Product\nWHERE product_id NOT IN (SELECT product_id FROM Product2)\n\n\u6216\u8005\nSELECT P1.product_id, P1.product_name\nFROM Product AS P1 LEFT JOIN Product2 AS P2\nON P1.product_id = P2.product_id\nWHERE P2.product_name IS NULL\n\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"/*\n\u4e00\u5bf9\u4e00\u6216\u4e00\u5bf9\u591a\u5173\u7cfb\u7684\u4e24\u4e2a\u96c6\u5408\uff0c\u5728\u8fdb\u884c\u8fde\u63a5\u64cd\u4f5c\u540e\u884c\u6570\u4e0d\u4f1a\uff08\u5f02\u5e38\u5730\uff09\u589e\u52a0\n*/\n\n-- \u8054\u7ed3\n-- INNER JOIN \uff08\u5185\u8054\u7ed3\uff09\uff08\u540c\u65f6\u5b58\u5728\u4e8e\u4e24\u5f20\u8868\u7684\u6570\u636e\uff09\uff08\u4e24\u8868\u65e0\u4e3b\u6b21\u5173\u7cfb\uff0c\u5339\u914d\u4e0a\u7684\u624d\u6709\u6548\uff09\nSELECT SP.shop_id, SP.shop_name, SP.product_id, P.product_name, P.sale_price\nFROM ShopProduct AS SP INNER JOIN Product AS P\nON SP.product_id = P.product_id\nWHERE SP.shop_id = '000A';\n\n-- OUTER JOIN \uff08\u5916\u8054\u7ed3\uff09\uff08\u53ea\u8981\u5b58\u5728\u4e8e\u5176\u4e2d\u4e00\u5f20\u8868\uff09\uff08\u6709\u4e00\u4e2a\u4e3b\u8868\uff09\nSELECT SP.shop_id, SP.shop_name, SP.product_id, P.product_name, P.sale_price\nFROM ShopProduct AS SP RIGHT OUTER JOIN Product AS P --  LEFT \u548c RIGHT \u6307\u5b9a\u8c01\u662f\u4e3b\u8868\uff0c\u7ed3\u679c\u4e2d\u4f1a\u5305\u542b\u4e3b\u8868\u5185\u6240\u6709\u7684\u6570\u636e\nON SP.product_id = P.product_id;\n\n-- \u6a21\u62df\u5168\u5916\u8fde\u63a5\nSELECT P1.product_id, P1.product_name, P2.product_id, P2.product_name FROM Product AS P1\nLEFT JOIN Product2 AS P2 ON P1.product_id = P2.product_id\nUNION\nSELECT P1.product_id, P1.product_name, P2.product_id, P2.product_name FROM Product AS P1\nRIGHT JOIN Product2 AS P2 ON P1.product_id = P2.product_id\n\n-- \u81ea\u94fe\u63a5\nSELECT P1.product_id, P1.product_name\nFROM Product AS P1, Product AS P2\nWHERE P1.product_type = P2.product_type\nAND P2.product_name = '\u53c9\u5b50' -- \u7528\u7b2c\u4e8c\u5f20\u8868\u7b5b\u9009\uff0c\u56e0\u4e3a\u5c55\u793a\u7684\u5217\u662fP1.product_name\n\n-- \u591a\u8868\u8054\u7ed3\nCREATE TABLE InventoryProduct\n(inventory_id CHAR(4) NOT NULL,\nproduct_id CHAR(4) NOT NULL,\ninventory_quantity INTEGER NOT NULL,\nPRIMARY KEY (inventory_id, product_id));\n\nSTART TRANSACTION;\nINSERT INTO InventoryProduct VALUES ('P001', '0001', 0);\nINSERT INTO InventoryProduct VALUES ('P001', '0002', 120);\nINSERT INTO InventoryProduct VALUES ('P001', '0003', 200);\nINSERT INTO InventoryProduct VALUES ('P001', '0004', 3);\nINSERT INTO InventoryProduct VALUES ('P001', '0005', 0);\nINSERT INTO InventoryProduct VALUES ('P001', '0006', 99);\nINSERT INTO InventoryProduct VALUES ('P001', '0007', 999);\nINSERT INTO InventoryProduct VALUES ('P001', '0008', 200);\nINSERT INTO InventoryProduct VALUES ('P002', '0001', 10);\nINSERT INTO InventoryProduct VALUES ('P002', '0002', 25);\nINSERT INTO InventoryProduct VALUES ('P002', '0003', 34);\nINSERT INTO InventoryProduct VALUES ('P002', '0004', 19);\nINSERT INTO InventoryProduct VALUES ('P002', '0005', 99);\nINSERT INTO InventoryProduct VALUES ('P002', '0006', 0);\nINSERT INTO InventoryProduct VALUES ('P002', '0007', 0 );\nINSERT INTO InventoryProduct VALUES ('P002', '0008', 18);\nCOMMIT;\n\nSELECT SP.shop_id, SP.shop_name, SP.product_id, P.product_name, P.sale_price, IP.inventory_quantity\nFROM ShopProduct AS SP \nINNER JOIN Product AS P \nON SP.product_id = P.product_id\nINNER JOIN InventoryProduct AS IP \nON SP.product_id = IP.product_id\nWHERE IP.inventory_id = 'P001';\n\n--  CROSS JOIN \uff08\u4ea4\u53c9\u8054\u7ed3\uff09\uff08\u7b1b\u5361\u5c14\u4e58\u79ef\uff0c\u7ed9\u745e\u5178\u5973\u738b\u8bb2\u8bfe\u7ed3\u679c\u8d25\u4e8e\u65e9\u8d77\u548c\u5bd2\u51b7\u6c14\u5019\u7684\u90a3\u4e2a\u54f2\u5b66\u5bb6\uff09\nSELECT SP.shop_id, SP.shop_name, SP.product_id, P.product_name\nFROM ShopProduct AS SP CROSS JOIN Product AS P;\n")),(0,p.kt)("p",null,"\u2193\u2193 ",(0,p.kt)("strong",{parentName:"p"},"\u7b2c\u4e03\u7ae0 Test")," \u2193\u2193"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT \n(CASE WHEN SP.shop_id IS NULL \nTHEN CONCAT('\u4e0d\u786e\u5b9a') ELSE SP.shop_id END) AS shop_id,\n(CASE WHEN SP.shop_name IS NULL \nTHEN CONCAT('\u4e0d\u786e\u5b9a') ELSE SP.shop_name END) AS shop_name,\nP.product_id, \nP.product_name, \nP.sale_price\nFROM ShopProduct AS SP RIGHT OUTER JOIN Product AS P\nON SP.product_id = P.product_id;\n\n\u6216\u8005\n\nSELECT \nCOALESCE(SP.shop_id, '\u4e0d\u786e\u5b9a') AS shop_id, -- COALESCE()\u8fd4\u56de\u7b2c\u4e00\u4e2a\u975e\u7a7a\u503c\nCOALESCE(SP.shop_name, '\u4e0d\u786e\u5b9a') AS shop_name,\nP.product_id,\nP.product_name,\nP.sale_price\nFROM ShopProduct SP RIGHT OUTER JOIN Product P\nON SP.product_id = P.product_id\nORDER BY shop_id;\n\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-sql"},"-- \u540c\u65f6\u5f97\u51fa\u5c0f\u8ba1\u548c\u5408\u8ba1\n\nSELECT '\u5408\u8ba1' AS product_type, SUM(sale_price)\nFROM Product\nUNION ALL\nSELECT product_type, SUM(sale_price)\nFROM Product\nGROUP BY product_type;\n")))}S.isMDXComponent=!0}}]);